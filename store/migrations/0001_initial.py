# Generated by Django 4.2 on 2023-11-13 16:51

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import store.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Box",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128)),
                (
                    "handle",
                    models.CharField(editable=False, max_length=128, unique=True),
                ),
                ("price", models.PositiveIntegerField()),
                ("create_date", models.DateTimeField(auto_now_add=True)),
                ("release_date", models.DateTimeField(blank=True, null=True)),
                ("is_available", models.BooleanField(default=False)),
                ("description", models.TextField()),
                ("discount", models.IntegerField(default=0)),
                (
                    "background_image",
                    models.ImageField(upload_to=store.models.item_media_path),
                ),
                (
                    "foreground_image",
                    models.FileField(upload_to=store.models.item_media_path),
                ),
                ("featured", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name_plural": "boxes",
            },
        ),
        migrations.CreateModel(
            name="Collection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128)),
                (
                    "handle",
                    models.CharField(editable=False, max_length=128, unique=True),
                ),
                ("price", models.PositiveIntegerField()),
                ("create_date", models.DateTimeField(auto_now_add=True)),
                ("release_date", models.DateTimeField(blank=True, null=True)),
                ("is_available", models.BooleanField(default=False)),
                ("description", models.TextField()),
                ("discount", models.IntegerField(default=0)),
                (
                    "background_image",
                    models.ImageField(upload_to=store.models.item_media_path),
                ),
                (
                    "foreground_image",
                    models.FileField(upload_to=store.models.item_media_path),
                ),
                ("featured", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128)),
                (
                    "item_type",
                    models.CharField(
                        choices=[
                            ("wear", "Wear"),
                            ("weapon", "Weapon"),
                            ("consumable", "Consumable"),
                            ("persona", "Persona"),
                            ("spray", "Spray"),
                        ],
                        max_length=32,
                    ),
                ),
                (
                    "subtype",
                    models.CharField(
                        blank=True,
                        choices=[("def", "Def"), ("ata", "Ata")],
                        max_length=32,
                        null=True,
                    ),
                ),
                (
                    "handle",
                    models.CharField(editable=False, max_length=128, unique=True),
                ),
                ("price", models.PositiveIntegerField()),
                ("create_date", models.DateTimeField(auto_now_add=True)),
                ("release_date", models.DateTimeField(null=True)),
                ("is_available", models.BooleanField(default=False)),
                ("description", models.TextField()),
                ("discount", models.IntegerField(default=0)),
                (
                    "background_image",
                    models.ImageField(upload_to=store.models.item_media_path),
                ),
                (
                    "foreground_image",
                    models.FileField(upload_to=store.models.item_media_path),
                ),
                (
                    "box_draw_chance",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                ("featured", models.BooleanField(default=False)),
                (
                    "box",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="store.box",
                    ),
                ),
                (
                    "collection",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="store.collection",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("purchase_date", models.DateTimeField(auto_now_add=True)),
                ("in_use", models.BooleanField(default=False)),
                ("can_use", models.BooleanField(default=True)),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="store.item"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserBox",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("purchase_date", models.DateTimeField(auto_now_add=True)),
                ("open_date", models.DateTimeField(null=True)),
                ("can_open", models.BooleanField(default=True)),
                (
                    "box",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="store.box"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "user boxes",
            },
        ),
        migrations.CreateModel(
            name="ProductTransaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("create_date", models.DateTimeField(auto_now_add=True)),
                ("product_id", models.CharField(max_length=256, unique=True)),
                ("transaction_id", models.CharField(max_length=256, unique=True)),
                ("amount", models.PositiveIntegerField()),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "transactions",
            },
        ),
        migrations.CreateModel(
            name="ItemMedia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file", models.FileField(upload_to=store.models.item_media_path)),
                (
                    "media_type",
                    models.CharField(
                        choices=[("video", "Video"), ("image", "Image")], max_length=16
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="store.item"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="item",
            name="owners",
            field=models.ManyToManyField(
                through="store.UserItem", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="box",
            name="owners",
            field=models.ManyToManyField(
                through="store.UserBox", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddIndex(
            model_name="useritem",
            index=models.Index(fields=["in_use"], name="store_useri_in_use_7f58da_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="useritem",
            unique_together={("user", "item")},
        ),
        migrations.AddIndex(
            model_name="userbox",
            index=models.Index(
                fields=["can_open"], name="store_userb_can_ope_e27fb8_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="userbox",
            unique_together={("user", "box")},
        ),
        migrations.AddIndex(
            model_name="producttransaction",
            index=models.Index(
                fields=["transaction_id"], name="store_produ_transac_bb1fda_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="producttransaction",
            index=models.Index(
                fields=["product_id"], name="store_produ_product_869c86_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="item",
            index=models.Index(fields=["handle"], name="store_item_handle_178093_idx"),
        ),
        migrations.AddIndex(
            model_name="item",
            index=models.Index(fields=["price"], name="store_item_price_feb942_idx"),
        ),
        migrations.AddIndex(
            model_name="item",
            index=models.Index(
                fields=["is_available"], name="store_item_is_avai_49f740_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="item",
            index=models.Index(
                fields=["release_date"], name="store_item_release_7a5e8a_idx"
            ),
        ),
    ]
